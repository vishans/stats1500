2+2
plot(data=numbers)
1+1
2+2
100:130
5+
6+
+1
s
die <- 1:6
test <- 1:12 step 2
ls()
die
die*2
die
round(4.1)
round(4.5)
round(4.6)
sample(die,size=1)
sample(die,size=1)
sample(die,size=1)
sample(die,size=1)
args(sample)
roll <- function(){}
roll <- function(){
sample(x = 1:6 , size = 1)
}
roll()
roll()
roll()
roll <- function(mylist = 1:6){
sample(x = mylist, size = 1)
}
roll
roll()
roll()
roll(20:30)
dice <- 1:6
sample(dice, size = 2)
dice <- 1:6
sample(dice, size = 2)
dice <- 1:6
sample(dice, size = 2)
install.packages("ggplot2")
library("ggplot2")
x <- c(-1, -0.8, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 1)
y <- x^3
qplot(x,y)
qplot(x3,binwidth = 1)
x3 <- c(0,1,1,2,2,2,3,3,3,4)
qplot(x3,binwidth = 1)
args(qplot)
replicate(10,roll())
roll <- function() {
die <- 1:6
sample(die,size = 1 )
}
replicate(10,roll())
roll <- function() {
die <- 1:6
sample(die,size = 1 )
}
rolls <- replicate(10000,roll())
qplot(rolls, binwidth = 1)
roll <- function() {
die1 <- 1:6
die2 <- 1:6
total <- sum(C(sample(die1,size = 1 ),sample(die2,size = 1 )))
}
rolls <- replicate(10000,roll())
qplot(rolls, binwidth = 1)
roll <- function() {
die1 <- 1:6
die2 <- 1:6
total <- sum(c(sample(die1,size = 1 ),sample(die2,size = 1 )))
}
rolls <- replicate(10000,roll())
qplot(rolls, binwidth = 1)
roll <- function(){
die <- 1:6
sample(die,2,replace = TRUE)
}
rolls <- replicate(10000,roll())
roll <- function(){
die <- 1:6
sample(die,2,replace = TRUE)
}
rolls <- replicate(10000,roll())
roll <- function(){
die <- 1:6
sample(die,2,replace = TRUE,prob = (1/8,1/8,1/8,1/8,1/8,3/8))
}
rolls <- replicate(10000,roll())
roll <- function(){
die <- 1:6
sample(die,2,replace = TRUE,prob = c(1/8,1/8,1/8,1/8,1/8,3/8))
}
rolls <- replicate(10000,roll())
roll <- function(){
die <- 1:6
sample(die,2,replace = TRUE,prob = c(1/8,1/8,1/8,1/8,1/8,3/8))
}
rolls <- replicate(10000,roll())
qplot(rolls)
qplot(rolls,binwidth=1)
roll <- function(){
die <- 1:6
sample(die,2,replace = TRUE,prob = c(1/8,1/8,1/8,1/8,1/8,3/8))
}
rolls <- replicate(10000,roll())
qplot(rolls,binwidth=1)
ls()
args(sample())
args(sample())
args(sample())
args(ls())
args(sample(x=die)
)
args(sum())
args(replicate())
args(round())
args(sample)
args(arg)
args(args)
?ls()
?qplot
?ls
??qplot
?ggplot.qplot
?ggplot2.qplot
?ggplot2
?ggplot2()
library('ggplot2')
?ggplot2
?qplot
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
is.vector(a)
class(a)
typeof(a)
raw(4)
source('~/.active-rstudio-document', echo=TRUE)
die
name(die) <- NULL
names(die) <- NULL
die
rm(a)
die <- 1:10
dim(die) <- c(5,2)
die
m <- matrix(die,ncol = 2,byrow = TRUE)
m
arr <- array(die,dim = c(5,2))
arr
args(array)
arr <- array(die,dim = c(5,2), dimnames = c('row','col'))
hand <- c('ace','king','queen','jack','ten','spade','spade','spade','spade','spade')
dim(hand) <- c(5,2)
hand
hand <- c('ace','king','queen','jack','ten','spade','spade','spade','spade','spade')
hand
arr <- array(hand, dim = c(5,2))
arr
hand <- c('ace','king','queen','jack','ten','spade','spade','spade','spade','spade')
hand
m <- matrix(hand,nrow = 5)
m
args(matrix)
f <- c(1L,'cat',24)
class(f)
f
is.vector(f)
is.array(f)
z <- 1:10
dim(z) <- c(5,2)
z
is.matrix(z)
is.array(z)
is.vector(z)
class(z)
attributes(z)
library(readxl)
german <- read_excel("C:/Users/VISHAN/Downloads/german.xlsx",
col_names = FALSE, col_types = c("text",
"skip", "skip"))
View(german)
head(german)
head(german)
2+2
hi
'hi'
length('hello')
len('hil')
demo()
two_d <- function(){
library('ggplot2')
die <- 1:6
sum(sample(die,size = 2,replace = TRUE))
}
y <- replicate(1000, two_d())
qplot(y)
factorial(9)
die <- c(1,2,3,4,5,6)
die
names(die)
names(die) <- c('one','two', 'three','four','five','six')
die
matrix(die, nrow = 2)
die
mat = matrix(die, nrow = 2)
mat
typeof(mat)
is.vector(mat)
is.matrix(mat)
is.vector(die)
class(mat)
unclass(mat)
mat
class(mat)
4!
factorial(4)
4 * 24
factorial(5)
print('hello')
x <- c(1:6)
x
1:6 %in% x
c(1,4) %in% x
c(1,69) %in% x
x = 10
x
x = 10
ls()
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
args(round)
sample(1:6, 1, replace = 1)
sample(1:6, 1, replace = 1)
sample(1:6, 1, replace = TRUE)
sample(1:6, 1, replace = T)
?sample
a <- list(1:6)
a
a[1]
a[[1]]
a[[1]][1]
a[[1]][2]
a <- list(1:6, 1:5)
a
a <- list(1:6, list(1:5))
a
a[[2]]
a[[2]][[1]][1]
a[[2]][[1]][4]
getwd()
setwd(../Stat1500)
setwd("../Stat1500")
setwd("Stat1500")
getwd()
source("~/day1.R", echo=TRUE)
?read.csv
dat.head
dat.head()
head(dat)
source("~/day1.R", echo=TRUE)
head(dat)
source("~/day1.R", echo=TRUE)
source("~/day1.R", echo=TRUE)
source("~/day1.R", echo=TRUE)
mdat
?mean
?apply
apply(dat, 2, mean)
colMeans(dat)
?colMeans
colMeans(dat[,1:4], na.rm = T)
?colVars
?colvars
sapply(dat, var)
?sapply
sapply(dat, var, na.rm = T)
source("~/day1.R", echo=TRUE)
source("~/day1.R", echo=TRUE)
head(dat)
source("~/day1.R", echo=TRUE)
head(dat)
?cbind
source("~/day1.R", echo=TRUE)
source("~/day1.R", echo=TRUE)
head(dat)
head(dat, -5)
dat[dat$Species == 'vericolor']
dat[dat$Species == 'versicolor']
dat[dat$Species == 'versicolor']
dat
\
source("~/day1.R", echo=TRUE)
dat[dat$Species == 'setosa']
dat
dat$Sepal.Length
dat$Species
dat$Species == 'virginica'
source("~/day1.R", echo=TRUE)
dat[dat$Species == 'setosa']
dat[,dat$Species == 'setosa']
dat$Species == 'versicolor'
v <- dat$Species == 'versicolor'
v
dat[v]
len(v)
v
length(v)
dat[v]
dat[v]
dat[v,]
head(datse)
source("~/day1.R", echo=TRUE)
head(datse)
source("~/day1.R", echo=TRUE)
source("~/day1.R", echo=TRUE)
source("~/day1.R", echo=TRUE)
source("~/day1.R", echo=TRUE)
warnings()
source("~/day1.R", echo=TRUE)
View(datse)
View(datse)
?rbind
source("~/day1.R", echo=TRUE)
source("~/day1.R", echo=TRUE)
source("~/day1.R", echo=TRUE)
source("~/day1.R", echo=TRUE)
source("~/day1.R", echo=TRUE)
source("~/Stat1500/Assignment 1/q1.R", echo=TRUE)
# a
dat <- read.csv('iris.csv')
source("~/Stat1500/Assignment 1/q1.R", echo=TRUE)
vdat
mdat
head(dat)
source("~/Stat1500/Assignment 1/q1.R", echo=TRUE)
vdat
dat[1:2]
dat[,1:#]
-
0
]
dat[,1:2]
source("~/Stat1500/Assignment 1/q2.R", echo=TRUE)
source("~/Stat1500/Assignment 1/q3.R", echo=TRUE)
rm(list = ls())
mdnorm3(0, log = T)
source("~/Stat1500/Assignment 1/q3.R", echo=TRUE)
mdnorm3(0, log = T)
dnorm(3, log= T)
dnorm(0 , log = T)
source("~/Stat1500/Assignment 1/q3.R", echo=TRUE)
dnorm3(0)
mdnorm(3)
mdnorm3(0)
dnorm(0)
mdnorm3(0, log = T)
dnorm(0, log = T)
source("~/Stat1500/Assignment 1/q3.R", echo=TRUE)
source("~/Stat1500/Assignment 1/q1.R", echo=TRUE)
mdat
dnorm(0,0,-9)
?sapply
mean(dat[1])
mean(dat[1], na.rm =  T)
dat[1]
mean(dat[1], na.rm = TRUE)
?mean
mean(dat[2])
mean(dat[2], na.rm = TRUE)
mean(dat[,:1], na.rm = T)
mean(dat[,1], na.rm = T)
mdat
dat[1]
typeof(dat[1])
typeof(dat[,1])
dat
source("~/Stat1500/Assignment 1/q2.R", echo=TRUE)
